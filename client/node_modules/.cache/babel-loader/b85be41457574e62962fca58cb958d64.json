{"ast":null,"code":"var _jsxFileName = \"/Users/brianpalowski/Desktop/music-clone/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport PrivateRoute from './auth/index';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport MusicMock from './views/MusicMock';\nimport Main from './views/Main';\nimport Error from './components/Error'; // import UserComponent from './components/UserComponent'\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Main,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRoute, {\n      authed: this.props.authenticated,\n      path: \"/musicmock\",\n      component: MusicMock,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      component: Error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  authenticated: state.userData.authenticated\n});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/brianpalowski/Desktop/music-clone/client/src/App.js"],"names":["React","Component","Route","Switch","PrivateRoute","connect","MusicMock","Main","Error","App","render","props","authenticated","mapStateToProps","state","userData","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,YAAP,MAAyB,cAAzB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAGA;;AAGA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAC1BS,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,GAFP;AAGE,MAAA,SAAS,EAAEH,IAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAOE,oBAAC,YAAD;AACE,MAAA,MAAM,EAAE,KAAKI,KAAL,CAAWC,aADrB;AAEE,MAAA,IAAI,EAAC,YAFP;AAGE,MAAA,SAAS,EAAEN,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,eAiBE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAEE,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,CAFF,CADF;AA2BD;;AA7ByB;;AAgC5B,MAAMK,eAAe,GAAGC,KAAK,KAAK;AAChCF,EAAAA,aAAa,EAAEE,KAAK,CAACC,QAAN,CAAeH;AADE,CAAL,CAA7B;;AAIA,MAAMI,kBAAkB,GAAG,EAA3B;AACA,eAAeX,OAAO,CAACQ,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CP,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport PrivateRoute from './auth/index'\n\nimport { connect } from 'react-redux'\n\nimport './App.css';\nimport MusicMock from './views/MusicMock'\nimport Main from './views/Main'\nimport Error from './components/Error'\n\n\n// import UserComponent from './components/UserComponent'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\" >\n\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            component={Main}\n          />\n\n          <PrivateRoute\n            authed={this.props.authenticated}\n            path='/musicmock'\n            component={MusicMock}\n          />\n          {/* <PrivateRoute\n            authed={this.props.authenticated}\n            path='/profile'\n            component={UserComponent}\n          /> */}\n          <Route\n            component={Error}\n          />\n        </Switch>\n\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  authenticated: state.userData.authenticated\n});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n\n"]},"metadata":{},"sourceType":"module"}