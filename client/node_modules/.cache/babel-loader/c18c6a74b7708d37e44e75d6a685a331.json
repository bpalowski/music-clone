{"ast":null,"code":"var _jsxFileName = \"/Users/brianpalowski/Desktop/musicmock/client/src/views/SearchDisplayBox.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { setTracksList } from '../state/actions/index';\nimport InputComponent from '../components/InputComponent';\nimport axios from 'axios';\n\nconst SearchDisplayBox = ({\n  song,\n  setTracksList\n}) => {\n  useEffect(() => {\n    if (song) {\n      stringSearch();\n    }\n  });\n\n  const stringSearch = async () => {\n    let arr = [];\n    await axios.get(`musicSearch/getMusic/${song}`).then(({\n      data\n    }) => {\n      data.map(x => {\n        let obj = {\n          id: x.id,\n          name: x.name,\n          uri: x.uri,\n          href: x.href,\n          preview_url: x.preview_url,\n          track_number: x.track_number,\n          images: x.album.images[2],\n          album: x.album.name,\n          release_date: x.album.release_date,\n          artist: x.album.artists[0].name\n        };\n        return arr.push(obj);\n      });\n      return setTracksList(arr);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchInputBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  song: state.musicData['songString']\n});\n\nconst mapDispatchToProps = {\n  setTracksList\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchDisplayBox);","map":{"version":3,"sources":["/Users/brianpalowski/Desktop/musicmock/client/src/views/SearchDisplayBox.js"],"names":["React","useEffect","connect","setTracksList","InputComponent","axios","SearchDisplayBox","song","stringSearch","arr","get","then","data","map","x","obj","id","name","uri","href","preview_url","track_number","images","album","release_date","artist","artists","push","catch","err","console","log","mapStateToProps","state","musicData","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,wBAA9B;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQJ,EAAAA;AAAR,CAAD,KAA6B;AAEpDF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,IAAJ,EAAU;AACRC,MAAAA,YAAY;AACb;AACF,GAJQ,CAAT;;AAOA,QAAMA,YAAY,GAAG,YAAY;AAC/B,QAAIC,GAAG,GAAG,EAAV;AACA,UAAMJ,KAAK,CAACK,GAAN,CAAW,wBAAuBH,IAAK,EAAvC,EACHI,IADG,CACE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAClBA,MAAAA,IAAI,CAACC,GAAL,CAASC,CAAC,IAAI;AACZ,YAAIC,GAAG,GAAG;AACRC,UAAAA,EAAE,EAAEF,CAAC,CAACE,EADE;AAERC,UAAAA,IAAI,EAAEH,CAAC,CAACG,IAFA;AAGRC,UAAAA,GAAG,EAAEJ,CAAC,CAACI,GAHC;AAIRC,UAAAA,IAAI,EAAEL,CAAC,CAACK,IAJA;AAKRC,UAAAA,WAAW,EAAEN,CAAC,CAACM,WALP;AAMRC,UAAAA,YAAY,EAAEP,CAAC,CAACO,YANR;AAORC,UAAAA,MAAM,EAAER,CAAC,CAACS,KAAF,CAAQD,MAAR,CAAe,CAAf,CAPA;AAQRC,UAAAA,KAAK,EAAET,CAAC,CAACS,KAAF,CAAQN,IARP;AASRO,UAAAA,YAAY,EAAEV,CAAC,CAACS,KAAF,CAAQC,YATd;AAURC,UAAAA,MAAM,EAAEX,CAAC,CAACS,KAAF,CAAQG,OAAR,CAAgB,CAAhB,EAAmBT;AAVnB,SAAV;AAYA,eAAOR,GAAG,CAACkB,IAAJ,CAASZ,GAAT,CAAP;AAED,OAfD;AAgBA,aAAOZ,aAAa,CAACM,GAAD,CAApB;AACD,KAnBG,EAmBDmB,KAnBC,CAmBKC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAnBZ,CAAN;AAoBD,GAtBD;;AAyBA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD,CAzCD;;AA2CA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAChC1B,EAAAA,IAAI,EAAE0B,KAAK,CAACC,SAAN,CAAgB,YAAhB;AAD0B,CAAL,CAA7B;;AAIA,MAAMC,kBAAkB,GAAG;AAAEhC,EAAAA;AAAF,CAA3B;AAEA,eAAeD,OAAO,CAAC8B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C7B,gBAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { connect } from \"react-redux\";\nimport { setTracksList } from '../state/actions/index'\n\nimport InputComponent from '../components/InputComponent'\nimport axios from 'axios'\n\n\nconst SearchDisplayBox = ({ song, setTracksList }) => {\n\n  useEffect(() => {\n    if (song) {\n      stringSearch()\n    }\n  })\n\n\n  const stringSearch = async () => {\n    let arr = [];\n    await axios.get(`musicSearch/getMusic/${song}`)\n      .then(({ data }) => {\n        data.map(x => {\n          let obj = {\n            id: x.id,\n            name: x.name,\n            uri: x.uri,\n            href: x.href,\n            preview_url: x.preview_url,\n            track_number: x.track_number,\n            images: x.album.images[2],\n            album: x.album.name,\n            release_date: x.album.release_date,\n            artist: x.album.artists[0].name\n          }\n          return arr.push(obj)\n\n        })\n        return setTracksList(arr)\n      }).catch(err => console.log(err))\n  }\n\n\n  return (\n    <div className=\"searchContainer\">\n      <div className=\"searchInputBox\" >\n        <InputComponent />\n      </div>\n    </div >\n  )\n}\n\nconst mapStateToProps = state => ({\n  song: state.musicData['songString'],\n});\n\nconst mapDispatchToProps = { setTracksList };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchDisplayBox);\n"]},"metadata":{},"sourceType":"module"}